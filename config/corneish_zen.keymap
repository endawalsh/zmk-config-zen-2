/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
* Modified 2022 by Enda Walsh
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
  chosen {
    zmk,matrix_transform = &default_transform;
  };
};


#define BASE 0
#define SYMBOL 1
#define NUMBER 2
#define ARROWS 3
#define ADJUST 4

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "Enda";
//  -------------------------------------------------------     -----------------------------------------------
// | ESC          |  Q  |  W  |  F          |  P     |  B  |   |  J    |  L   |  U   |  Y  |  ;  | BSPC        |
// | TAB (CTRL)   |  A  |  R  |  S          |  T     |  G  |   |  M    |  N   |  E   |  I  |  O  | '           |
// | BSLH (RSHFT) |  Z  |  X  |  C          |  D     |  V  |   |  K    |  H   |  ,   |  .  |  /  | ENT (RSHFT) |
//                            | MENU (LALT) | SYMBOL | SPC |   |  ARWS |  RSE |  GUI |
                        bindings = <
   &kp ESC               &kp Q &kp W &kp F          &kp P      &kp B        &kp J      &kp L      &kp U     &kp Y   &kp SEMI &kp BSPC
   &mt LCTRL TAB         &kp A &kp R &kp S          &kp T      &kp G        &kp M      &kp N      &kp E     &kp I   &kp O    &kp SQT
   &mt LSHFT NON_US_BSLH &kp Z &kp X &kp C          &kp D      &kp V        &kp K      &kp H      &kp COMMA &kp DOT &kp FSLH &mt RSHFT RET
                                     &mt LALT K_APP &mo SYMBOL &kp SPACE    &mo ARROWS &mo NUMBER &kp LGUI
                        >;
                };
                
                symbol_layer {
                        label = "Enda";
//  -------------------------------------------     ---------------------------------------
// | GRAVE   |      |     |      |  €    |     |   |     |  _      |  +  |  {  |  }  | DEL |
// | CTRLTAB |  !   |  "  |  £   |  $    |  %  |   |  ^  |  &      |  *  |  (  |  )  |  #  |
// |         | UNDO | CUT | COPY | PASTE |     |   |     |  -      |  =  |  [  |  ]  |     |
//                        |      |       |     |   |     | ADJUST  |     |
                        bindings = <
   &kp GRAVE   &trans    &trans    &trans    &kp RA(DLLR) &trans       &trans     &kp UNDER &kp PLUS        &kp LBRC &kp RBRC &kp DEL
   &kp LC(TAB) &kp EXCL  &kp AT    &kp HASH  &kp DLLR     &kp PRCNT    &kp CARET  &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSLH
   &trans      &kp LC(Z) &kp LC(X) &kp LC(C) &kp LC(V)    &trans       &trans     &kp MINUS &kp EQUAL       &kp LBKT &kp RBKT &trans
                    	           &trans    &trans       &trans       &mo ADJUST &trans    &trans
                        >;
                };

                number_layer {
                        label = "Enda";
//  -------------------------------------     --------------------------------
// | GRAVE      | F1 | F2 | F3 | F4     | F5  |   | F6  | F7 | F8 | F9 | F10 | DEL |
// | TAB (CTRL) |  1 |  2 |  3 |  4     |  5  |   |  6  |  7 |  8 |  9 |   0 |     |
// |            |    |    |    |        | F11 |   | F12 |    |    |    |     |     |
//                        |    | ADJUST |     |   |     |    |    |
                        bindings = <
   &kp GRAVE     &kp F1    &kp F2    &kp F3    &kp F4     &kp F5    &kp F6    &kp F7    &kp F8    &kp F9    &kp F10   &kp DEL
   &mt LCTRL TAB &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp KP_N4  &kp KP_N5 &kp KP_N6 &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_N0 &kp HASH
   &trans        &trans    &trans    &trans    &trans     &kp F11   &kp F12   &trans    &trans    &trans    &trans    &trans
                                     &trans    &mo ADJUST &trans    &trans    &trans    &trans
                        >;
                };
                
                arrows_layer {
                        label = "Enda";
//  -------------------------------------------      ------------------------------------------
// | MUTE | BRIUP | PAUSE | VOLUP | PLAY |     |    | PGUP | HOME | UP   | END   | PGUP | DEL |
// |      | BRIDN | PREV  | VOLDN | NEXT |     |    | PGDN | LEFT | DOWN | RIGHT | PGDN |     |
// | BTCLR| BT1   | BT2   | BT3   | BT4  | BT5 |    |      |      |      |       |      |     |
//                |       |       |      |     |    |      |      |
                        bindings = <
   &kp C_MUTE &kp C_BRI_UP &kp C_PAUSE  &kp C_VOL_UP &kp C_PLAY   &trans          &kp PG_UP &kp HOME &kp UP   &kp END   &kp PG_UP &kp DEL
   &trans     &kp C_BRI_DN &kp C_PREV   &kp C_VOL_DN &kp C_NEXT   &trans          &kp PG_DN &kp LEFT &kp DOWN &kp RIGHT &kp PG_DN &trans
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4    &trans    &trans   &trans   &trans    &trans    &trans
                                        &trans       &trans       &trans          &trans    &trans   &trans
                        >;
                };

                adjust_layer {
                        label = "Enda";
//  ----------------------------------------------------      -----------------------------------------------------
// | F13    | F14    | F15    | F16   | PRTSCN | F18    |    | F19    | F20    | F21    | F22    | F23    | F24    |
// | CAPS   | CTLF14 | RESET  | SLEEP | CTLF17 | CTLF18 |    | CTLF19 | CTLF20 | CTLF21 | CTLF22 | CTLF23 | CTLF24 |
// | ALTF13 | PAUSE  | SCLLCK | CALC  | INSERT | ALTF18 |    | ALTF19 | ALTF20 | ALTF21 | ALTF22 | ALTF23 | ALTF24 |
//                            |       |        |        |    |        |        |        |
                        bindings = <
   &kp F13     &kp F14         &kp F15  &kp F16       &kp PSCRN   &bootloader    &kp F19     &kp F20     &kp F21     &kp F22     &kp F23     &kp F24
   &kp CAPS    &kp LC(F14)     &reset   &kp C_SLEEP   &kp LC(F17) &kp LC(F18)    &kp LC(F19) &kp LC(F20) &kp LC(F21) &kp LC(F22) &kp LC(F23) &kp LC(F24)
   &kp LA(F13) &kp PAUSE_BREAK &kp SLCK &kp C_AL_CALC &kp INS     &kp LA(F18)    &kp LA(F19) &kp LA(F20) &kp LA(F21) &kp LA(F22) &kp LA(F23) &kp LA(F24)
                          	        &trans        &trans      &trans         &trans      &trans      &trans
                        >;
                };

        };
};